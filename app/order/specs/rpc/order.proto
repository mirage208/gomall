syntax = "proto3";

package order;
option go_package = "./order";

message Order {
  int64 ID = 1;
  string CreateTime = 2;
  string UpdateTime = 3;
  string OrderSn = 4;
  int64 UserID = 5;
  string AddressDetail = 6;
  string AddressPhoneName = 7;
  int64 ProductID = 8;
  string Title = 9;
  string SubTitle = 10;
  string Banner = 11;
  string Info = 12;
  int64 ProductStoreID = 13;
  int64 ProductBossID = 14;
  int64 ProductCount = 15;
  int64 UnitPrice = 16;
  int64 TotalPrice = 17;
  int64 Status = 18;
  string Remark = 19;
  string PayTime = 20;
  string PayType = 21;
}

message CreateOrderReq {
  int64 UserID = 1;
  int64 ProductID = 2;
  int64 UserAddressID = 3;
  int64 ProductCount = 4;
  string Remark = 5;
}
message CreateOrderResp { string sn = 1; }

message OrderDetailReq {
  int64 UserID = 1;
  string SN = 2;
}
message OrderDetailResp { Order order = 1; }

message UpdateOrderTradeStateReq {
  string OrderSn = 1;
  int64 tradeState = 2; //-1: 已取消 0:待支付 1:未使用 2:已使用  3:已过关闭
}
message UpdateOrderTradeStateResp {
  int64 ID = 1;
  int64 UserID = 2;
  string OrderSn = 3;
  string TradeCode = 4;
  int64 LiveStartDate = 5;
  int64 LiveEndDate = 6;
  int64 OrderTotalPrice = 7;
  string Title = 8;
}

message UserOrderListReq {
  int64 lastId = 1;
  int64 pageSize = 2;
  int64 userId = 3;
  int64 traderState = 4;
}
message UserOrderListResp { repeated Order list = 1; }

// service
service order {
  // 下订单
  rpc createOrder(CreateOrderReq) returns (CreateOrderResp);

  // 订单详情
  rpc OrderDetail(OrderDetailReq) returns (OrderDetailResp);

  // 更新订单状态
  rpc updateOrderTradeState(UpdateOrderTradeStateReq)
      returns (UpdateOrderTradeStateResp);

  // 用户订单
  rpc userOrderList(UserOrderListReq) returns (UserOrderListResp);
}