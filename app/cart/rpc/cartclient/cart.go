// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: cart.proto

package cartclient

import (
	"context"

	"github.com/mirage208/gomall/app/cart/rpc/pb/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddProductToCartReq       = cart.AddProductToCartReq
	AddProductToCartResp      = cart.AddProductToCartResp
	CartProduct               = cart.CartProduct
	CartProductListReq        = cart.CartProductListReq
	CartProductListResp       = cart.CartProductListResp
	DeleteProductFromCartReq  = cart.DeleteProductFromCartReq
	DeleteProductFromCartResp = cart.DeleteProductFromCartResp
	UpdateProductDetailReq    = cart.UpdateProductDetailReq
	UpdateProductDetailResp   = cart.UpdateProductDetailResp

	Cart interface {
		AddProductToCart(ctx context.Context, in *AddProductToCartReq, opts ...grpc.CallOption) (*AddProductToCartResp, error)
		CartProductList(ctx context.Context, in *CartProductListReq, opts ...grpc.CallOption) (*CartProductListResp, error)
		DeleteProductFromCart(ctx context.Context, in *DeleteProductFromCartReq, opts ...grpc.CallOption) (*DeleteProductFromCartResp, error)
		UpdateProductDetail(ctx context.Context, in *UpdateProductDetailReq, opts ...grpc.CallOption) (*UpdateProductDetailResp, error)
	}

	defaultCart struct {
		cli zrpc.Client
	}
)

func NewCart(cli zrpc.Client) Cart {
	return &defaultCart{
		cli: cli,
	}
}

func (m *defaultCart) AddProductToCart(ctx context.Context, in *AddProductToCartReq, opts ...grpc.CallOption) (*AddProductToCartResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.AddProductToCart(ctx, in, opts...)
}

func (m *defaultCart) CartProductList(ctx context.Context, in *CartProductListReq, opts ...grpc.CallOption) (*CartProductListResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.CartProductList(ctx, in, opts...)
}

func (m *defaultCart) DeleteProductFromCart(ctx context.Context, in *DeleteProductFromCartReq, opts ...grpc.CallOption) (*DeleteProductFromCartResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.DeleteProductFromCart(ctx, in, opts...)
}

func (m *defaultCart) UpdateProductDetail(ctx context.Context, in *UpdateProductDetailReq, opts ...grpc.CallOption) (*UpdateProductDetailResp, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.UpdateProductDetail(ctx, in, opts...)
}
