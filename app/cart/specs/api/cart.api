syntax = "v1"

info (
	title:   "cart.api"
	desc:    "购物车模块"
	version: "v1"
)

type CartProduct {
	ID            int64  `json:"id"`
	ProductID     int64  `json:"productId"`
	Title         string `json:"title"`
	Banner        string `json:"banner"`
	Price         int64  `json:"price"`
	DiscountPrice int64  `json:"discountPrice"`
	Count         int64  `json:"count"`
	Checked       int64  `json:"checked"`
}

type (
	// 添加商品到购物车
	AddProductToCartReq {
		ProductID int64 `json:"productId"`
		Count     int64 `json:"count"`
	}
	AddProductToCartResp  {}
	// 添加商品到购物车
	// 购物车商品列表
	CartProductListReq  {}
	CartProductListResp {
		CartProducts []CartProduct `json:"cartProducts"`
	}
	// 购物车商品列表
	// 删除购物车商品
	DeleteProductFromCartReq {
		CartID int64 `json:"cartId"`
	}
	DeleteProductFromCartResp  {}
	// 删除购物车商品
	// 修改购物车商品的信息
	UpdateProductDetailReq {
		CartID int64 `json:"cartId"`
		Count  int64 `json:"count"`
		Check  int64 `json:"check"`
	}
	UpdateProductDetailResp  {}
// 修改购物车商品的信息
)

@server (
	group:      cart
	prefix:     cart/v1
	jwt:        JwtAuth
	middleware: CheckUserState
)
service cart {
	@doc "添加商品到购物车"
	@handler addProductToCart
	post /cart (AddProductToCartReq) returns (AddProductToCartResp)

	@doc "购物车商品列表"
	@handler cartProductList
	get /cart (CartProductListReq) returns (CartProductListResp)

	@doc "删除购物车商品"
	@handler deleteProductFromCart
	delete /cart (DeleteProductFromCartReq) returns (DeleteProductFromCartResp)

	@doc "修改购物车商品的信息"
	@handler updateProductDetail
	put /cart (UpdateProductDetailReq) returns (UpdateProductDetailResp)
}

