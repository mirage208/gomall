syntax = "v1"

info (
	title:   "user.api"
	desc:    "用户模块"
	author:  "strangers"
	version: "v1"
)

type User {
	Id       int64  `json:"id"`
	Mobile   string `json:"mobile"`
	Nickname string `json:"nickname"`
	Sex      int64  `json:"sex"`
	Avatar   string `json:"avatar"`
	Info     string `json:"info"`
}

type (
	RegisterReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	LoginReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	WXMiniAuthReq {
		Code          string `json:"code"`
		IV            string `json:"iv"`
		EncryptedData string `json:"encryptedData"`
	}
	WXMiniAuthResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq  {}
	UserInfoResp {
		UserInfo User `json:"userInfo"`
	}
)

//no need login
@server (
	prefix: user/v1
	group:  user
)
service user {
	@doc "register"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)

	@doc "login"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)
}

//need login
@server (
	prefix: user/v1
	group:  user
	jwt:    JwtAuth
)
service user {
	@doc "get user info"
	@handler detail
	post /user/detail (UserInfoReq) returns (UserInfoResp)

	@doc "wechat mini auth"
	@handler wxMiniAuth
	post /user/wxMiniAuth (WXMiniAuthReq) returns (WXMiniAuthResp)
}

