// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: payment.proto

package paymentclient

import (
	"context"

	"github.com/mirage208/gomall/app/payment/rpc/pb/payment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CallbackRequest  = payment.CallbackRequest
	CallbackResponse = payment.CallbackResponse
	CreateRequest    = payment.CreateRequest
	CreateResponse   = payment.CreateResponse
	DetailRequest    = payment.DetailRequest
	DetailResponse   = payment.DetailResponse

	Payment interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error)
		Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultPayment) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}

func (m *defaultPayment) Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.Callback(ctx, in, opts...)
}
