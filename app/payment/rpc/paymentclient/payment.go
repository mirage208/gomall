// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: payment.proto

package paymentclient

import (
	"context"

	"github.com/mirage208/gomall/app/payment/rpc/pb/payment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetPaymentDetailReq  = payment.GetPaymentDetailReq
	GetPaymentDetailResp = payment.GetPaymentDetailResp
	OrderPaymentReq      = payment.OrderPaymentReq
	OrderPaymentResp     = payment.OrderPaymentResp

	Payment interface {
		OrderPayment(ctx context.Context, in *OrderPaymentReq, opts ...grpc.CallOption) (*OrderPaymentResp, error)
		GetPaymentDetail(ctx context.Context, in *GetPaymentDetailReq, opts ...grpc.CallOption) (*GetPaymentDetailResp, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) OrderPayment(ctx context.Context, in *OrderPaymentReq, opts ...grpc.CallOption) (*OrderPaymentResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.OrderPayment(ctx, in, opts...)
}

func (m *defaultPayment) GetPaymentDetail(ctx context.Context, in *GetPaymentDetailReq, opts ...grpc.CallOption) (*GetPaymentDetailResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.GetPaymentDetail(ctx, in, opts...)
}
